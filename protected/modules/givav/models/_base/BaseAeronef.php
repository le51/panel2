<?php

/**
 * This is the model base class for the table "aeronef".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Aeronef".
 *
 * Columns in table "aeronef" available as properties of the model,
 * followed by relations of table "aeronef" available as properties of the model.
 *
 * @property integer $id_aeronef
 * @property string $immatriculation
 * @property string $no_concours
 * @property boolean $remorqueur
 * @property boolean $autonome
 * @property boolean $treuillable
 * @property boolean $remorquable
 * @property boolean $actif
 * @property integer $id_type
 * @property boolean $suivi_gnav
 * @property integer $id_compte_gnav
 * @property boolean $turbo
 * @property boolean $simulateur
 * @property boolean $stat_ffvv
 * @property string $no_serie
 * @property integer $annee_fabrication
 * @property string $cdn
 * @property string $cen_validite
 * @property string $assurance_nom
 * @property string $assurance_police
 * @property string $assurance_echeance
 * @property boolean $balise
 * @property string $remorque_type
 * @property string $remorque_immatriculation
 * @property boolean $flarm
 * @property boolean $bandes_anti_col
 *
 * @property CarnetBord[] $carnetBords
 * @property TarifAeronef[] $tarifAeronefs
 * @property ForfaitModele[] $forfaitModeles
 * @property AeronefSituation[] $aeronefSituations
 * @property AeronefImei[] $aeronefImeis
 * @property AeronefPosition[] $aeronefPositions
 * @property RemorqueurActivite[] $remorqueurActivites
 * @property CompteGnav $idCompteGnav
 * @property Type $idType
 * @property TarifTypeDate[] $tarifTypeDates
 * @property Grille[] $grilles
 * @property Stage[] $stages
 * @property Vol[] $vols
 * @property Vol[] $vols1
 * @property AeronefActivite[] $aeronefActivites
 * @property DemandeStage[] $demandeStages
 * @property StatFfvvAeronef[] $statFfvvAeronefs
 */
abstract class BaseAeronef extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'aeronef';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Aeronef|Aeronefs', $n);
	}

	public static function representingColumn() {
		return 'immatriculation';
	}

	public function rules() {
		return array(
			array('immatriculation, no_concours, id_type', 'required'),
			array('id_type, id_compte_gnav, annee_fabrication', 'numerical', 'integerOnly'=>true),
			array('immatriculation', 'length', 'max'=>10),
			array('no_concours', 'length', 'max'=>5),
			array('no_serie, cdn, assurance_nom, assurance_police, remorque_type', 'length', 'max'=>60),
			array('remorque_immatriculation', 'length', 'max'=>15),
			array('remorqueur, autonome, treuillable, remorquable, actif, suivi_gnav, turbo, simulateur, stat_ffvv, cen_validite, assurance_echeance, balise, flarm, bandes_anti_col', 'safe'),
			array('remorqueur, autonome, treuillable, remorquable, actif, suivi_gnav, id_compte_gnav, turbo, simulateur, stat_ffvv, no_serie, annee_fabrication, cdn, cen_validite, assurance_nom, assurance_police, assurance_echeance, balise, remorque_type, remorque_immatriculation, flarm, bandes_anti_col', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_aeronef, immatriculation, no_concours, remorqueur, autonome, treuillable, remorquable, actif, id_type, suivi_gnav, id_compte_gnav, turbo, simulateur, stat_ffvv, no_serie, annee_fabrication, cdn, cen_validite, assurance_nom, assurance_police, assurance_echeance, balise, remorque_type, remorque_immatriculation, flarm, bandes_anti_col', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'carnetBords' => array(self::HAS_MANY, 'CarnetBord', 'id_aeronef'),
			'tarifAeronefs' => array(self::HAS_MANY, 'TarifAeronef', 'id_aeronef'),
			'forfaitModeles' => array(self::MANY_MANY, 'ForfaitModele', 'forfait_modele_aeronef_exclu(id_aeronef, id_forfait_modele)'),
			'aeronefSituations' => array(self::HAS_MANY, 'AeronefSituation', 'id_aeronef'),
			'aeronefImeis' => array(self::HAS_MANY, 'AeronefImei', 'id_aeronef'),
			'aeronefPositions' => array(self::HAS_MANY, 'AeronefPosition', 'id_aeronef'),
			'remorqueurActivites' => array(self::HAS_MANY, 'RemorqueurActivite', 'id_aeronef'),
			'idCompteGnav' => array(self::BELONGS_TO, 'CompteGnav', 'id_compte_gnav'),
			'idType' => array(self::BELONGS_TO, 'Type', 'id_type'),
			'tarifTypeDates' => array(self::HAS_MANY, 'TarifTypeDate', 'id_aeronef'),
			'grilles' => array(self::HAS_MANY, 'Grille', 'id_aeronef'),
			'stages' => array(self::HAS_MANY, 'Stage', 'id_aeronef'),
			'vols' => array(self::HAS_MANY, 'Vol', 'remorqueur'),
			'vols1' => array(self::HAS_MANY, 'Vol', 'id_aeronef'),
			'aeronefActivites' => array(self::HAS_MANY, 'AeronefActivite', 'id_aeronef'),
			'demandeStages' => array(self::HAS_MANY, 'DemandeStage', 'id_aeronef'),
			'statFfvvAeronefs' => array(self::HAS_MANY, 'StatFfvvAeronef', 'id_aeronef'),
		);
	}

	public function pivotModels() {
		return array(
			'forfaitModeles' => 'ForfaitModeleAeronefExclu',
		);
	}

	public function attributeLabels() {
		return array(
			'id_aeronef' => Yii::t('app', 'Id Aeronef'),
			'immatriculation' => Yii::t('app', 'Immatriculation'),
			'no_concours' => Yii::t('app', 'No Concours'),
			'remorqueur' => Yii::t('app', 'Remorqueur'),
			'autonome' => Yii::t('app', 'Autonome'),
			'treuillable' => Yii::t('app', 'Treuillable'),
			'remorquable' => Yii::t('app', 'Remorquable'),
			'actif' => Yii::t('app', 'Actif'),
			'id_type' => null,
			'suivi_gnav' => Yii::t('app', 'Suivi Gnav'),
			'id_compte_gnav' => null,
			'turbo' => Yii::t('app', 'Turbo'),
			'simulateur' => Yii::t('app', 'Simulateur'),
			'stat_ffvv' => Yii::t('app', 'Stat Ffvv'),
			'no_serie' => Yii::t('app', 'No Serie'),
			'annee_fabrication' => Yii::t('app', 'Annee Fabrication'),
			'cdn' => Yii::t('app', 'Cdn'),
			'cen_validite' => Yii::t('app', 'Cen Validite'),
			'assurance_nom' => Yii::t('app', 'Assurance Nom'),
			'assurance_police' => Yii::t('app', 'Assurance Police'),
			'assurance_echeance' => Yii::t('app', 'Assurance Echeance'),
			'balise' => Yii::t('app', 'Balise'),
			'remorque_type' => Yii::t('app', 'Remorque Type'),
			'remorque_immatriculation' => Yii::t('app', 'Remorque Immatriculation'),
			'flarm' => Yii::t('app', 'Flarm'),
			'bandes_anti_col' => Yii::t('app', 'Bandes Anti Col'),
			'carnetBords' => null,
			'tarifAeronefs' => null,
			'forfaitModeles' => null,
			'aeronefSituations' => null,
			'aeronefImeis' => null,
			'aeronefPositions' => null,
			'remorqueurActivites' => null,
			'idCompteGnav' => null,
			'idType' => null,
			'tarifTypeDates' => null,
			'grilles' => null,
			'stages' => null,
			'vols' => null,
			'vols1' => null,
			'aeronefActivites' => null,
			'demandeStages' => null,
			'statFfvvAeronefs' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_aeronef', $this->id_aeronef);
		$criteria->compare('immatriculation', $this->immatriculation, true);
		$criteria->compare('no_concours', $this->no_concours, true);
		$criteria->compare('remorqueur', $this->remorqueur);
		$criteria->compare('autonome', $this->autonome);
		$criteria->compare('treuillable', $this->treuillable);
		$criteria->compare('remorquable', $this->remorquable);
		$criteria->compare('actif', $this->actif);
		$criteria->compare('id_type', $this->id_type);
		$criteria->compare('suivi_gnav', $this->suivi_gnav);
		$criteria->compare('id_compte_gnav', $this->id_compte_gnav);
		$criteria->compare('turbo', $this->turbo);
		$criteria->compare('simulateur', $this->simulateur);
		$criteria->compare('stat_ffvv', $this->stat_ffvv);
		$criteria->compare('no_serie', $this->no_serie, true);
		$criteria->compare('annee_fabrication', $this->annee_fabrication);
		$criteria->compare('cdn', $this->cdn, true);
		$criteria->compare('cen_validite', $this->cen_validite, true);
		$criteria->compare('assurance_nom', $this->assurance_nom, true);
		$criteria->compare('assurance_police', $this->assurance_police, true);
		$criteria->compare('assurance_echeance', $this->assurance_echeance, true);
		$criteria->compare('balise', $this->balise);
		$criteria->compare('remorque_type', $this->remorque_type, true);
		$criteria->compare('remorque_immatriculation', $this->remorque_immatriculation, true);
		$criteria->compare('flarm', $this->flarm);
		$criteria->compare('bandes_anti_col', $this->bandes_anti_col);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
