<?php

/**
 * This is the model base class for the table "banque".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Banque".
 *
 * Columns in table "banque" available as properties of the model,
 * followed by relations of table "banque" available as properties of the model.
 *
 * @property integer $id_banque
 * @property integer $id_compte
 * @property string $domiciliation
 * @property string $code_banque
 * @property string $code_guichet
 * @property string $no_compte
 * @property string $cle_rib
 * @property string $iban
 * @property string $bic
 * @property string $type_compte
 * @property integer $id_banque_emettrice
 * @property string $nom_agence
 * @property string $adresse_1
 * @property string $adresse_2
 * @property string $code_postal
 * @property string $ville
 * @property string $correspondant
 * @property string $tel
 * @property string $e_mail
 * @property integer $jours_valeur_cb
 * @property integer $jours_valeur_cheque
 *
 * @property RemiseBanque[] $remiseBanques
 * @property BanqueChequier[] $banqueChequiers
 * @property Compte $idCompte
 * @property BanqueEmettrice $idBanqueEmettrice
 * @property Rapprochement[] $rapprochements
 */
abstract class BaseBanque extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'banque';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Banque|Banques', $n);
	}

	public static function representingColumn() {
		return 'domiciliation';
	}

	public function rules() {
		return array(
			array('id_compte, domiciliation, code_banque, code_guichet, no_compte, id_banque_emettrice', 'required'),
			array('id_compte, id_banque_emettrice, jours_valeur_cb, jours_valeur_cheque', 'numerical', 'integerOnly'=>true),
			array('domiciliation, correspondant', 'length', 'max'=>120),
			array('code_banque, code_guichet, code_postal', 'length', 'max'=>5),
			array('no_compte', 'length', 'max'=>11),
			array('cle_rib', 'length', 'max'=>2),
			array('iban, nom_agence, adresse_1, adresse_2, ville, e_mail', 'length', 'max'=>60),
			array('bic', 'length', 'max'=>30),
			array('type_compte', 'length', 'max'=>1),
			array('tel', 'length', 'max'=>25),
			array('cle_rib, iban, bic, type_compte, nom_agence, adresse_1, adresse_2, code_postal, ville, correspondant, tel, e_mail, jours_valeur_cb, jours_valeur_cheque', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_banque, id_compte, domiciliation, code_banque, code_guichet, no_compte, cle_rib, iban, bic, type_compte, id_banque_emettrice, nom_agence, adresse_1, adresse_2, code_postal, ville, correspondant, tel, e_mail, jours_valeur_cb, jours_valeur_cheque', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'remiseBanques' => array(self::HAS_MANY, 'RemiseBanque', 'id_banque'),
			'banqueChequiers' => array(self::HAS_MANY, 'BanqueChequier', 'id_banque'),
			'idCompte' => array(self::BELONGS_TO, 'Compte', 'id_compte'),
			'idBanqueEmettrice' => array(self::BELONGS_TO, 'BanqueEmettrice', 'id_banque_emettrice'),
			'rapprochements' => array(self::HAS_MANY, 'Rapprochement', 'id_banque'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_banque' => Yii::t('app', 'Id Banque'),
			'id_compte' => null,
			'domiciliation' => Yii::t('app', 'Domiciliation'),
			'code_banque' => Yii::t('app', 'Code Banque'),
			'code_guichet' => Yii::t('app', 'Code Guichet'),
			'no_compte' => Yii::t('app', 'No Compte'),
			'cle_rib' => Yii::t('app', 'Cle Rib'),
			'iban' => Yii::t('app', 'Iban'),
			'bic' => Yii::t('app', 'Bic'),
			'type_compte' => Yii::t('app', 'Type Compte'),
			'id_banque_emettrice' => null,
			'nom_agence' => Yii::t('app', 'Nom Agence'),
			'adresse_1' => Yii::t('app', 'Adresse 1'),
			'adresse_2' => Yii::t('app', 'Adresse 2'),
			'code_postal' => Yii::t('app', 'Code Postal'),
			'ville' => Yii::t('app', 'Ville'),
			'correspondant' => Yii::t('app', 'Correspondant'),
			'tel' => Yii::t('app', 'Tel'),
			'e_mail' => Yii::t('app', 'E Mail'),
			'jours_valeur_cb' => Yii::t('app', 'Jours Valeur Cb'),
			'jours_valeur_cheque' => Yii::t('app', 'Jours Valeur Cheque'),
			'remiseBanques' => null,
			'banqueChequiers' => null,
			'idCompte' => null,
			'idBanqueEmettrice' => null,
			'rapprochements' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_banque', $this->id_banque);
		$criteria->compare('id_compte', $this->id_compte);
		$criteria->compare('domiciliation', $this->domiciliation, true);
		$criteria->compare('code_banque', $this->code_banque, true);
		$criteria->compare('code_guichet', $this->code_guichet, true);
		$criteria->compare('no_compte', $this->no_compte, true);
		$criteria->compare('cle_rib', $this->cle_rib, true);
		$criteria->compare('iban', $this->iban, true);
		$criteria->compare('bic', $this->bic, true);
		$criteria->compare('type_compte', $this->type_compte, true);
		$criteria->compare('id_banque_emettrice', $this->id_banque_emettrice);
		$criteria->compare('nom_agence', $this->nom_agence, true);
		$criteria->compare('adresse_1', $this->adresse_1, true);
		$criteria->compare('adresse_2', $this->adresse_2, true);
		$criteria->compare('code_postal', $this->code_postal, true);
		$criteria->compare('ville', $this->ville, true);
		$criteria->compare('correspondant', $this->correspondant, true);
		$criteria->compare('tel', $this->tel, true);
		$criteria->compare('e_mail', $this->e_mail, true);
		$criteria->compare('jours_valeur_cb', $this->jours_valeur_cb);
		$criteria->compare('jours_valeur_cheque', $this->jours_valeur_cheque);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
