<?php

/**
 * This is the model base class for the table "classe".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Classe".
 *
 * Columns in table "classe" available as properties of the model,
 * followed by relations of table "classe" available as properties of the model.
 *
 * @property integer $id
 * @property integer $id_concours
 * @property string $libelle
 *
 * @property Ligne[] $lignes
 * @property Moyen[] $moyens
 * @property Concours $idConcours
 * @property ClasseOrdre[] $classeOrdres
 */
abstract class BaseClasse extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'classe';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Classe|Classes', $n);
	}

	public static function representingColumn() {
		return 'libelle';
	}

	public function rules() {
		return array(
			array('id_concours, libelle', 'required'),
			array('id_concours', 'numerical', 'integerOnly'=>true),
			array('libelle', 'length', 'max'=>255),
			array('id, id_concours, libelle', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'lignes' => array(self::HAS_MANY, 'Ligne', 'id_classe'),
			'moyens' => array(self::MANY_MANY, 'Moyen', 'moyen_prix(id_classe, id_moyen)'),
			'idConcours' => array(self::BELONGS_TO, 'Concours', 'id_concours'),
			'classeOrdres' => array(self::HAS_MANY, 'ClasseOrdre', 'id_classe'),
		);
	}

	public function pivotModels() {
		return array(
			'moyens' => 'MoyenPrix',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'id_concours' => null,
			'libelle' => Yii::t('app', 'Libelle'),
			'lignes' => null,
			'moyens' => null,
			'idConcours' => null,
			'classeOrdres' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('id_concours', $this->id_concours);
		$criteria->compare('libelle', $this->libelle, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
