<?php

/**
 * This is the model base class for the table "compte_interne".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CompteInterne".
 *
 * Columns in table "compte_interne" available as properties of the model,
 * followed by relations of table "compte_interne" available as properties of the model.
 *
 * @property integer $id_compte_interne
 * @property string $libelle
 * @property integer $id_compte
 * @property boolean $actif
 *
 * @property TarifTypeVol[] $tarifTypeVols
 * @property Compte $idCompte
 */
abstract class BaseCompteInterne extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'compte_interne';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'CompteInterne|CompteInternes', $n);
	}

	public static function representingColumn() {
		return 'libelle';
	}

	public function rules() {
		return array(
			array('libelle', 'required'),
			array('id_compte', 'numerical', 'integerOnly'=>true),
			array('libelle', 'length', 'max'=>255),
			array('actif', 'safe'),
			array('id_compte, actif', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_compte_interne, libelle, id_compte, actif', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'tarifTypeVols' => array(self::HAS_MANY, 'TarifTypeVol', 'id_compte_interne'),
			'idCompte' => array(self::BELONGS_TO, 'Compte', 'id_compte'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_compte_interne' => Yii::t('app', 'Id Compte Interne'),
			'libelle' => Yii::t('app', 'Libelle'),
			'id_compte' => null,
			'actif' => Yii::t('app', 'Actif'),
			'tarifTypeVols' => null,
			'idCompte' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_compte_interne', $this->id_compte_interne);
		$criteria->compare('libelle', $this->libelle, true);
		$criteria->compare('id_compte', $this->id_compte);
		$criteria->compare('actif', $this->actif);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
