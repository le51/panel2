<?php

/**
 * This is the model base class for the table "document".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Document".
 *
 * Columns in table "document" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id_document
 * @property string $racine
 * @property string $libelle
 * @property boolean $fichier
 * @property string $nom_fichier
 * @property string $texte
 * @property string $date_creation
 * @property integer $taille
 * @property integer $id_utilisateur
 * @property string $date_modification
 * @property boolean $masque
 *
 */
abstract class BaseDocument extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'document';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Document|Documents', $n);
	}

	public static function representingColumn() {
		return 'racine';
	}

	public function rules() {
		return array(
			array('taille, id_utilisateur', 'numerical', 'integerOnly'=>true),
			array('racine', 'length', 'max'=>1000),
			array('libelle, nom_fichier', 'length', 'max'=>255),
			array('fichier, texte, date_creation, date_modification, masque', 'safe'),
			array('racine, libelle, fichier, nom_fichier, texte, date_creation, taille, id_utilisateur, date_modification, masque', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_document, racine, libelle, fichier, nom_fichier, texte, date_creation, taille, id_utilisateur, date_modification, masque', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_document' => Yii::t('app', 'Id Document'),
			'racine' => Yii::t('app', 'Racine'),
			'libelle' => Yii::t('app', 'Libelle'),
			'fichier' => Yii::t('app', 'Fichier'),
			'nom_fichier' => Yii::t('app', 'Nom Fichier'),
			'texte' => Yii::t('app', 'Texte'),
			'date_creation' => Yii::t('app', 'Date Creation'),
			'taille' => Yii::t('app', 'Taille'),
			'id_utilisateur' => Yii::t('app', 'Id Utilisateur'),
			'date_modification' => Yii::t('app', 'Date Modification'),
			'masque' => Yii::t('app', 'Masque'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_document', $this->id_document);
		$criteria->compare('racine', $this->racine, true);
		$criteria->compare('libelle', $this->libelle, true);
		$criteria->compare('fichier', $this->fichier);
		$criteria->compare('nom_fichier', $this->nom_fichier, true);
		$criteria->compare('texte', $this->texte, true);
		$criteria->compare('date_creation', $this->date_creation, true);
		$criteria->compare('taille', $this->taille);
		$criteria->compare('id_utilisateur', $this->id_utilisateur);
		$criteria->compare('date_modification', $this->date_modification, true);
		$criteria->compare('masque', $this->masque);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
