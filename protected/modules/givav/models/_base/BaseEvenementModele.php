<?php

/**
 * This is the model base class for the table "evenement_modele".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "EvenementModele".
 *
 * Columns in table "evenement_modele" available as properties of the model,
 * followed by relations of table "evenement_modele" available as properties of the model.
 *
 * @property integer $id_eve_mod
 * @property integer $saison
 * @property string $concerne
 * @property string $reference
 * @property string $montant
 * @property boolean $alerte
 * @property integer $delai
 * @property boolean $actif
 * @property integer $id_type_piece
 * @property string $categorie
 * @property string $code
 * @property boolean $ffvv
 *
 * @property EvenementPilote[] $evenementPilotes
 * @property ForfaitModele[] $forfaitModeles
 * @property TypePiece $idTypePiece
 */
abstract class BaseEvenementModele extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'evenement_modele';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'EvenementModele|EvenementModeles', $n);
	}

	public static function representingColumn() {
		return 'concerne';
	}

	public function rules() {
		return array(
			array('reference', 'required'),
			array('saison, delai, id_type_piece', 'numerical', 'integerOnly'=>true),
			array('concerne', 'length', 'max'=>1),
			array('reference', 'length', 'max'=>120),
			array('montant', 'length', 'max'=>10),
			array('categorie, code', 'length', 'max'=>15),
			array('alerte, actif, ffvv', 'safe'),
			array('saison, concerne, montant, alerte, delai, actif, id_type_piece, categorie, code, ffvv', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_eve_mod, saison, concerne, reference, montant, alerte, delai, actif, id_type_piece, categorie, code, ffvv', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'evenementPilotes' => array(self::HAS_MANY, 'EvenementPilote', 'id_eve_mod'),
			'forfaitModeles' => array(self::HAS_MANY, 'ForfaitModele', 'id_eve_mod'),
			'idTypePiece' => array(self::BELONGS_TO, 'TypePiece', 'id_type_piece'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_eve_mod' => Yii::t('app', 'Id Eve Mod'),
			'saison' => Yii::t('app', 'Saison'),
			'concerne' => Yii::t('app', 'Concerne'),
			'reference' => Yii::t('app', 'Reference'),
			'montant' => Yii::t('app', 'Montant'),
			'alerte' => Yii::t('app', 'Alerte'),
			'delai' => Yii::t('app', 'Delai'),
			'actif' => Yii::t('app', 'Actif'),
			'id_type_piece' => null,
			'categorie' => Yii::t('app', 'Categorie'),
			'code' => Yii::t('app', 'Code'),
			'ffvv' => Yii::t('app', 'Ffvv'),
			'evenementPilotes' => null,
			'forfaitModeles' => null,
			'idTypePiece' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_eve_mod', $this->id_eve_mod);
		$criteria->compare('saison', $this->saison);
		$criteria->compare('concerne', $this->concerne, true);
		$criteria->compare('reference', $this->reference, true);
		$criteria->compare('montant', $this->montant, true);
		$criteria->compare('alerte', $this->alerte);
		$criteria->compare('delai', $this->delai);
		$criteria->compare('actif', $this->actif);
		$criteria->compare('id_type_piece', $this->id_type_piece);
		$criteria->compare('categorie', $this->categorie, true);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('ffvv', $this->ffvv);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
