<?php

/**
 * This is the model base class for the table "evenement_pilote".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "EvenementPilote".
 *
 * Columns in table "evenement_pilote" available as properties of the model,
 * followed by relations of table "evenement_pilote" available as properties of the model.
 *
 * @property integer $id_eve_pil
 * @property integer $id_eve_mod
 * @property integer $id_annu
 * @property string $date_debut
 * @property string $date_fin
 * @property integer $saison
 * @property string $reference
 * @property string $reference_exterieur
 * @property string $date_ecriture
 * @property string $montant
 * @property string $date_creation
 * @property integer $id_utilisateur_creation
 * @property string $date_modification
 * @property integer $id_utilisateur_modification
 *
 * @property Annuaire $idAnnu
 * @property EvenementModele $idEveMod
 * @property Utilisateur $idUtilisateurCreation
 * @property Utilisateur $idUtilisateurModification
 * @property ForfaitPilote[] $forfaitPilotes
 * @property Piece[] $pieces
 */
abstract class BaseEvenementPilote extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'evenement_pilote';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'EvenementPilote|EvenementPilotes', $n);
	}

	public static function representingColumn() {
		return 'date_debut';
	}

	public function rules() {
		return array(
			array('id_eve_mod, id_annu, date_debut, reference, date_creation, id_utilisateur_creation, date_modification, id_utilisateur_modification', 'required'),
			array('id_eve_mod, id_annu, saison, id_utilisateur_creation, id_utilisateur_modification', 'numerical', 'integerOnly'=>true),
			array('reference', 'length', 'max'=>120),
			array('reference_exterieur', 'length', 'max'=>60),
			array('montant', 'length', 'max'=>10),
			array('date_fin, date_ecriture', 'safe'),
			array('date_fin, saison, reference_exterieur, date_ecriture, montant', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_eve_pil, id_eve_mod, id_annu, date_debut, date_fin, saison, reference, reference_exterieur, date_ecriture, montant, date_creation, id_utilisateur_creation, date_modification, id_utilisateur_modification', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idAnnu' => array(self::BELONGS_TO, 'Annuaire', 'id_annu'),
			'idEveMod' => array(self::BELONGS_TO, 'EvenementModele', 'id_eve_mod'),
			'idUtilisateurCreation' => array(self::BELONGS_TO, 'Utilisateur', 'id_utilisateur_creation'),
			'idUtilisateurModification' => array(self::BELONGS_TO, 'Utilisateur', 'id_utilisateur_modification'),
			'forfaitPilotes' => array(self::HAS_MANY, 'ForfaitPilote', 'id_eve_pil'),
			'pieces' => array(self::HAS_MANY, 'Piece', 'id_eve_pil'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_eve_pil' => Yii::t('app', 'Id Eve Pil'),
			'id_eve_mod' => null,
			'id_annu' => null,
			'date_debut' => Yii::t('app', 'Date Debut'),
			'date_fin' => Yii::t('app', 'Date Fin'),
			'saison' => Yii::t('app', 'Saison'),
			'reference' => Yii::t('app', 'Reference'),
			'reference_exterieur' => Yii::t('app', 'Reference Exterieur'),
			'date_ecriture' => Yii::t('app', 'Date Ecriture'),
			'montant' => Yii::t('app', 'Montant'),
			'date_creation' => Yii::t('app', 'Date Creation'),
			'id_utilisateur_creation' => null,
			'date_modification' => Yii::t('app', 'Date Modification'),
			'id_utilisateur_modification' => null,
			'idAnnu' => null,
			'idEveMod' => null,
			'idUtilisateurCreation' => null,
			'idUtilisateurModification' => null,
			'forfaitPilotes' => null,
			'pieces' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_eve_pil', $this->id_eve_pil);
		$criteria->compare('id_eve_mod', $this->id_eve_mod);
		$criteria->compare('id_annu', $this->id_annu);
		$criteria->compare('date_debut', $this->date_debut, true);
		$criteria->compare('date_fin', $this->date_fin, true);
		$criteria->compare('saison', $this->saison);
		$criteria->compare('reference', $this->reference, true);
		$criteria->compare('reference_exterieur', $this->reference_exterieur, true);
		$criteria->compare('date_ecriture', $this->date_ecriture, true);
		$criteria->compare('montant', $this->montant, true);
		$criteria->compare('date_creation', $this->date_creation, true);
		$criteria->compare('id_utilisateur_creation', $this->id_utilisateur_creation);
		$criteria->compare('date_modification', $this->date_modification, true);
		$criteria->compare('id_utilisateur_modification', $this->id_utilisateur_modification);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
