<?php

/**
 * This is the model base class for the table "exercice".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Exercice".
 *
 * Columns in table "exercice" available as properties of the model,
 * followed by relations of table "exercice" available as properties of the model.
 *
 * @property integer $id_exercice
 * @property string $nom
 * @property string $date_debut
 * @property string $date_fin
 * @property boolean $cloture
 *
 * @property Piece[] $pieces
 * @property BudgetPrevi[] $budgetPrevis
 */
abstract class BaseExercice extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'exercice';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Exercice|Exercices', $n);
	}

	public static function representingColumn() {
		return 'nom';
	}

	public function rules() {
		return array(
			array('nom, date_debut, date_fin', 'required'),
			array('nom', 'length', 'max'=>30),
			array('cloture', 'safe'),
			array('cloture', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_exercice, nom, date_debut, date_fin, cloture', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'pieces' => array(self::HAS_MANY, 'Piece', 'id_exercice'),
			'budgetPrevis' => array(self::HAS_MANY, 'BudgetPrevi', 'id_exercice'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_exercice' => Yii::t('app', 'Id Exercice'),
			'nom' => Yii::t('app', 'Nom'),
			'date_debut' => Yii::t('app', 'Date Debut'),
			'date_fin' => Yii::t('app', 'Date Fin'),
			'cloture' => Yii::t('app', 'Cloture'),
			'pieces' => null,
			'budgetPrevis' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_exercice', $this->id_exercice);
		$criteria->compare('nom', $this->nom, true);
		$criteria->compare('date_debut', $this->date_debut, true);
		$criteria->compare('date_fin', $this->date_fin, true);
		$criteria->compare('cloture', $this->cloture);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
