<?php

/**
 * This is the model base class for the table "fonction_date".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "FonctionDate".
 *
 * Columns in table "fonction_date" available as properties of the model,
 * followed by relations of table "fonction_date" available as properties of the model.
 *
 * @property integer $id_fonction_date
 * @property integer $id_fonction
 * @property integer $id_annu
 * @property string $date_debut
 * @property string $date_fin
 *
 * @property Fonction $idFonction
 * @property Annuaire $idAnnu
 */
abstract class BaseFonctionDate extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'fonction_date';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'FonctionDate|FonctionDates', $n);
	}

	public static function representingColumn() {
		return 'date_debut';
	}

	public function rules() {
		return array(
			array('id_fonction, date_debut', 'required'),
			array('id_fonction', 'numerical', 'integerOnly'=>true),
			array('date_fin', 'safe'),
			array('date_fin', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_fonction_date, id_fonction, id_annu, date_debut, date_fin', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idFonction' => array(self::BELONGS_TO, 'Fonction', 'id_fonction'),
			'idAnnu' => array(self::BELONGS_TO, 'Annuaire', 'id_annu'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_fonction_date' => Yii::t('app', 'Id Fonction Date'),
			'id_fonction' => null,
			'id_annu' => null,
			'date_debut' => Yii::t('app', 'Date Debut'),
			'date_fin' => Yii::t('app', 'Date Fin'),
			'idFonction' => null,
			'idAnnu' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_fonction_date', $this->id_fonction_date);
		$criteria->compare('id_fonction', $this->id_fonction);
		$criteria->compare('id_annu', $this->id_annu);
		$criteria->compare('date_debut', $this->date_debut, true);
		$criteria->compare('date_fin', $this->date_fin, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
