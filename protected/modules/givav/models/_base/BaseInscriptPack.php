<?php

/**
 * This is the model base class for the table "inscript_pack".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "InscriptPack".
 *
 * Columns in table "inscript_pack" available as properties of the model,
 * followed by relations of table "inscript_pack" available as properties of the model.
 *
 * @property integer $id_inscript_pack
 * @property integer $numero
 * @property string $libelle
 * @property string $commentaire
 * @property string $concerne
 *
 * @property InscriptPackContent[] $inscriptPackContents
 */
abstract class BaseInscriptPack extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'inscript_pack';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'InscriptPack|InscriptPacks', $n);
	}

	public static function representingColumn() {
		return 'concerne';
	}

	public function rules() {
		return array(
			array('numero', 'numerical', 'integerOnly'=>true),
			array('libelle', 'length', 'max'=>255),
			array('concerne', 'length', 'max'=>1),
			array('commentaire', 'safe'),
			array('numero, libelle, commentaire, concerne', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_inscript_pack, numero, libelle, commentaire, concerne', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'inscriptPackContents' => array(self::HAS_MANY, 'InscriptPackContent', 'id_inscript_pack'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_inscript_pack' => Yii::t('app', 'Id Inscript Pack'),
			'numero' => Yii::t('app', 'Numero'),
			'libelle' => Yii::t('app', 'Libelle'),
			'commentaire' => Yii::t('app', 'Commentaire'),
			'concerne' => Yii::t('app', 'Concerne'),
			'inscriptPackContents' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_inscript_pack', $this->id_inscript_pack);
		$criteria->compare('numero', $this->numero);
		$criteria->compare('libelle', $this->libelle, true);
		$criteria->compare('commentaire', $this->commentaire, true);
		$criteria->compare('concerne', $this->concerne, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
