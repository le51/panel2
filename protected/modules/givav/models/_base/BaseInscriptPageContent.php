<?php

/**
 * This is the model base class for the table "inscript_page_content".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "InscriptPageContent".
 *
 * Columns in table "inscript_page_content" available as properties of the model,
 * followed by relations of table "inscript_page_content" available as properties of the model.
 *
 * @property integer $id_inscript_page_content
 * @property integer $id_inscript_page
 * @property integer $page_ordre
 * @property string $groupe
 * @property string $libelle
 * @property boolean $date_debut
 * @property boolean $reference_exterieur
 * @property boolean $date_fin
 * @property string $categorie
 * @property string $code
 *
 * @property InscriptPage $idInscriptPage
 */
abstract class BaseInscriptPageContent extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'inscript_page_content';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'InscriptPageContent|InscriptPageContents', $n);
	}

	public static function representingColumn() {
		return 'groupe';
	}

	public function rules() {
		return array(
			array('id_inscript_page, page_ordre, groupe', 'required'),
			array('id_inscript_page, page_ordre', 'numerical', 'integerOnly'=>true),
			array('groupe, categorie, code', 'length', 'max'=>15),
			array('libelle', 'length', 'max'=>255),
			array('date_debut, reference_exterieur, date_fin', 'safe'),
			array('libelle, date_debut, reference_exterieur, date_fin, categorie, code', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_inscript_page_content, id_inscript_page, page_ordre, groupe, libelle, date_debut, reference_exterieur, date_fin, categorie, code', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idInscriptPage' => array(self::BELONGS_TO, 'InscriptPage', 'id_inscript_page'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_inscript_page_content' => Yii::t('app', 'Id Inscript Page Content'),
			'id_inscript_page' => null,
			'page_ordre' => Yii::t('app', 'Page Ordre'),
			'groupe' => Yii::t('app', 'Groupe'),
			'libelle' => Yii::t('app', 'Libelle'),
			'date_debut' => Yii::t('app', 'Date Debut'),
			'reference_exterieur' => Yii::t('app', 'Reference Exterieur'),
			'date_fin' => Yii::t('app', 'Date Fin'),
			'categorie' => Yii::t('app', 'Categorie'),
			'code' => Yii::t('app', 'Code'),
			'idInscriptPage' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_inscript_page_content', $this->id_inscript_page_content);
		$criteria->compare('id_inscript_page', $this->id_inscript_page);
		$criteria->compare('page_ordre', $this->page_ordre);
		$criteria->compare('groupe', $this->groupe, true);
		$criteria->compare('libelle', $this->libelle, true);
		$criteria->compare('date_debut', $this->date_debut);
		$criteria->compare('reference_exterieur', $this->reference_exterieur);
		$criteria->compare('date_fin', $this->date_fin);
		$criteria->compare('categorie', $this->categorie, true);
		$criteria->compare('code', $this->code, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
