<?php

/**
 * This is the model base class for the table "langue".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Langue".
 *
 * Columns in table "langue" available as properties of the model,
 * followed by relations of table "langue" available as properties of the model.
 *
 * @property integer $id_langue
 * @property string $langue
 * @property string $libelle
 *
 * @property Annuaire[] $annuaires
 * @property DemandeStage[] $demandeStages
 * @property Traduction[] $traductions
 */
abstract class BaseLangue extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'langue';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Langue|Langues', $n);
	}

	public static function representingColumn() {
		return 'langue';
	}

	public function rules() {
		return array(
			array('langue, libelle', 'required'),
			array('langue', 'length', 'max'=>10),
			array('libelle', 'length', 'max'=>255),
			array('id_langue, langue, libelle', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'annuaires' => array(self::HAS_MANY, 'Annuaire', 'id_langue'),
			'demandeStages' => array(self::HAS_MANY, 'DemandeStage', 'id_langue'),
			'traductions' => array(self::HAS_MANY, 'Traduction', 'id_langue'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_langue' => Yii::t('app', 'Id Langue'),
			'langue' => Yii::t('app', 'Langue'),
			'libelle' => Yii::t('app', 'Libelle'),
			'annuaires' => null,
			'demandeStages' => null,
			'traductions' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_langue', $this->id_langue);
		$criteria->compare('langue', $this->langue, true);
		$criteria->compare('libelle', $this->libelle, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
