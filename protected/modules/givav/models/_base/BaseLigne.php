<?php

/**
 * This is the model base class for the table "ligne".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Ligne".
 *
 * Columns in table "ligne" available as properties of the model,
 * followed by relations of table "ligne" available as properties of the model.
 *
 * @property integer $id
 * @property integer $id_classe
 * @property integer $ligne
 *
 * @property Grille[] $grilles
 * @property Classe $idClasse
 * @property LigneOrdre[] $ligneOrdres
 */
abstract class BaseLigne extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'ligne';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Ligne|Lignes', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('id_classe', 'required'),
			array('id_classe, ligne', 'numerical', 'integerOnly'=>true),
			array('ligne', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, id_classe, ligne', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'grilles' => array(self::HAS_MANY, 'Grille', 'id_ligne'),
			'idClasse' => array(self::BELONGS_TO, 'Classe', 'id_classe'),
			'ligneOrdres' => array(self::HAS_MANY, 'LigneOrdre', 'id_ligne'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'id_classe' => null,
			'ligne' => Yii::t('app', 'Ligne'),
			'grilles' => null,
			'idClasse' => null,
			'ligneOrdres' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('id_classe', $this->id_classe);
		$criteria->compare('ligne', $this->ligne);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
