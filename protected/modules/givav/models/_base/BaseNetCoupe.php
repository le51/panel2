<?php

/**
 * This is the model base class for the table "net_coupe".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "NetCoupe".
 *
 * Columns in table "net_coupe" available as properties of the model,
 * followed by relations of table "net_coupe" available as properties of the model.
 *
 * @property integer $id_vol
 * @property integer $annee
 * @property integer $id_annu
 * @property string $km
 * @property string $point
 * @property integer $novol
 * @property boolean $plus25
 * @property integer $duree
 * @property string $pays
 * @property string $region
 * @property string $decollage
 * @property string $type_planeur
 * @property integer $coef_planeur
 * @property boolean $libre
 * @property string $point_open
 * @property string $type_circuit
 * @property string $mode_controle
 * @property string $depart
 * @property string $virage1
 * @property string $virage2
 * @property string $virage3
 * @property string $arrivee
 * @property string $fichier_igc
 * @property string $commentaire
 *
 * @property Annuaire $idAnnu
 * @property Vol $idVol
 */
abstract class BaseNetCoupe extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'net_coupe';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'NetCoupe|NetCoupes', $n);
	}

	public static function representingColumn() {
		return 'km';
	}

	public function rules() {
		return array(
			array('id_vol, annee, id_annu, km, point', 'required'),
			array('id_vol, annee, id_annu, novol, duree, coef_planeur', 'numerical', 'integerOnly'=>true),
			array('km, point, point_open', 'length', 'max'=>7),
			array('pays, region, decollage, type_planeur, type_circuit, mode_controle, depart, virage1, virage2, virage3, arrivee, fichier_igc', 'length', 'max'=>255),
			array('plus25, libre, commentaire', 'safe'),
			array('novol, plus25, duree, pays, region, decollage, type_planeur, coef_planeur, libre, point_open, type_circuit, mode_controle, depart, virage1, virage2, virage3, arrivee, fichier_igc, commentaire', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_vol, annee, id_annu, km, point, novol, plus25, duree, pays, region, decollage, type_planeur, coef_planeur, libre, point_open, type_circuit, mode_controle, depart, virage1, virage2, virage3, arrivee, fichier_igc, commentaire', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idAnnu' => array(self::BELONGS_TO, 'Annuaire', 'id_annu'),
			'idVol' => array(self::BELONGS_TO, 'Vol', 'id_vol'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_vol' => null,
			'annee' => Yii::t('app', 'Annee'),
			'id_annu' => null,
			'km' => Yii::t('app', 'Km'),
			'point' => Yii::t('app', 'Point'),
			'novol' => Yii::t('app', 'Novol'),
			'plus25' => Yii::t('app', 'Plus25'),
			'duree' => Yii::t('app', 'Duree'),
			'pays' => Yii::t('app', 'Pays'),
			'region' => Yii::t('app', 'Region'),
			'decollage' => Yii::t('app', 'Decollage'),
			'type_planeur' => Yii::t('app', 'Type Planeur'),
			'coef_planeur' => Yii::t('app', 'Coef Planeur'),
			'libre' => Yii::t('app', 'Libre'),
			'point_open' => Yii::t('app', 'Point Open'),
			'type_circuit' => Yii::t('app', 'Type Circuit'),
			'mode_controle' => Yii::t('app', 'Mode Controle'),
			'depart' => Yii::t('app', 'Depart'),
			'virage1' => Yii::t('app', 'Virage1'),
			'virage2' => Yii::t('app', 'Virage2'),
			'virage3' => Yii::t('app', 'Virage3'),
			'arrivee' => Yii::t('app', 'Arrivee'),
			'fichier_igc' => Yii::t('app', 'Fichier Igc'),
			'commentaire' => Yii::t('app', 'Commentaire'),
			'idAnnu' => null,
			'idVol' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_vol', $this->id_vol);
		$criteria->compare('annee', $this->annee);
		$criteria->compare('id_annu', $this->id_annu);
		$criteria->compare('km', $this->km, true);
		$criteria->compare('point', $this->point, true);
		$criteria->compare('novol', $this->novol);
		$criteria->compare('plus25', $this->plus25);
		$criteria->compare('duree', $this->duree);
		$criteria->compare('pays', $this->pays, true);
		$criteria->compare('region', $this->region, true);
		$criteria->compare('decollage', $this->decollage, true);
		$criteria->compare('type_planeur', $this->type_planeur, true);
		$criteria->compare('coef_planeur', $this->coef_planeur);
		$criteria->compare('libre', $this->libre);
		$criteria->compare('point_open', $this->point_open, true);
		$criteria->compare('type_circuit', $this->type_circuit, true);
		$criteria->compare('mode_controle', $this->mode_controle, true);
		$criteria->compare('depart', $this->depart, true);
		$criteria->compare('virage1', $this->virage1, true);
		$criteria->compare('virage2', $this->virage2, true);
		$criteria->compare('virage3', $this->virage3, true);
		$criteria->compare('arrivee', $this->arrivee, true);
		$criteria->compare('fichier_igc', $this->fichier_igc, true);
		$criteria->compare('commentaire', $this->commentaire, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
