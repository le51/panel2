<?php

/**
 * This is the model base class for the table "param".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Param".
 *
 * Columns in table "param" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id_param
 * @property integer $derniere_saison_close
 * @property string $email_from_defaut
 * @property string $email_type_envoi
 * @property string $email_smtp_host
 * @property integer $email_smtp_port
 * @property string $email_smtp_ssl
 * @property integer $email_smtp_timeout
 * @property string $email_smtp_user
 * @property string $email_smtp_password
 * @property string $code_modele
 * @property string $aerodrome
 * @property string $version_base
 * @property string $derniere_sauvegarde
 *
 */
abstract class BaseParam extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'param';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Param|Params', $n);
	}

	public static function representingColumn() {
		return 'email_type_envoi';
	}

	public function rules() {
		return array(
			array('id_param, derniere_saison_close, derniere_sauvegarde', 'required'),
			array('derniere_saison_close, email_smtp_port, email_smtp_timeout', 'numerical', 'integerOnly'=>true),
			array('email_from_defaut, email_smtp_host, email_smtp_user, version_base', 'length', 'max'=>255),
			array('email_type_envoi', 'length', 'max'=>1),
			array('email_smtp_ssl, code_modele', 'length', 'max'=>10),
			array('email_smtp_password', 'length', 'max'=>50),
			array('aerodrome', 'length', 'max'=>60),
			array('email_from_defaut, email_type_envoi, email_smtp_host, email_smtp_port, email_smtp_ssl, email_smtp_timeout, email_smtp_user, email_smtp_password, code_modele, aerodrome, version_base', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_param, derniere_saison_close, email_from_defaut, email_type_envoi, email_smtp_host, email_smtp_port, email_smtp_ssl, email_smtp_timeout, email_smtp_user, email_smtp_password, code_modele, aerodrome, version_base, derniere_sauvegarde', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_param' => Yii::t('app', 'Id Param'),
			'derniere_saison_close' => Yii::t('app', 'Derniere Saison Close'),
			'email_from_defaut' => Yii::t('app', 'Email From Defaut'),
			'email_type_envoi' => Yii::t('app', 'Email Type Envoi'),
			'email_smtp_host' => Yii::t('app', 'Email Smtp Host'),
			'email_smtp_port' => Yii::t('app', 'Email Smtp Port'),
			'email_smtp_ssl' => Yii::t('app', 'Email Smtp Ssl'),
			'email_smtp_timeout' => Yii::t('app', 'Email Smtp Timeout'),
			'email_smtp_user' => Yii::t('app', 'Email Smtp User'),
			'email_smtp_password' => Yii::t('app', 'Email Smtp Password'),
			'code_modele' => Yii::t('app', 'Code Modele'),
			'aerodrome' => Yii::t('app', 'Aerodrome'),
			'version_base' => Yii::t('app', 'Version Base'),
			'derniere_sauvegarde' => Yii::t('app', 'Derniere Sauvegarde'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_param', $this->id_param, true);
		$criteria->compare('derniere_saison_close', $this->derniere_saison_close);
		$criteria->compare('email_from_defaut', $this->email_from_defaut, true);
		$criteria->compare('email_type_envoi', $this->email_type_envoi, true);
		$criteria->compare('email_smtp_host', $this->email_smtp_host, true);
		$criteria->compare('email_smtp_port', $this->email_smtp_port);
		$criteria->compare('email_smtp_ssl', $this->email_smtp_ssl, true);
		$criteria->compare('email_smtp_timeout', $this->email_smtp_timeout);
		$criteria->compare('email_smtp_user', $this->email_smtp_user, true);
		$criteria->compare('email_smtp_password', $this->email_smtp_password, true);
		$criteria->compare('code_modele', $this->code_modele, true);
		$criteria->compare('aerodrome', $this->aerodrome, true);
		$criteria->compare('version_base', $this->version_base, true);
		$criteria->compare('derniere_sauvegarde', $this->derniere_sauvegarde, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
