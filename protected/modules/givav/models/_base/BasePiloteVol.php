<?php

/**
 * This is the model base class for the table "pilote_vol".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PiloteVol".
 *
 * Columns in table "pilote_vol" available as properties of the model,
 * followed by relations of table "pilote_vol" available as properties of the model.
 *
 * @property integer $id_pilote_vol
 * @property integer $id_vol
 * @property integer $id_annu
 * @property string $date_vol
 * @property integer $fonction
 * @property string $duree_fact
 * @property string $treuillee
 * @property string $prix_vol
 * @property string $prix_treuil
 * @property string $prix_remorque
 * @property string $prix_moteur
 * @property integer $id_compte_interne
 * @property string $moteur
 * @property string $remorque
 * @property string $prix_retro_moteur
 * @property string $prix_retro_remorque
 * @property string $prix_retro_treuil
 * @property string $prix_retro_vol
 * @property string $participation_journee
 *
 * @property Piece[] $pieces
 * @property Annuaire $idAnnu
 * @property Vol $idVol
 */
abstract class BasePiloteVol extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'pilote_vol';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PiloteVol|PiloteVols', $n);
	}

	public static function representingColumn() {
		return 'date_vol';
	}

	public function rules() {
		return array(
			array('id_vol, date_vol', 'required'),
			array('id_vol, id_annu, fonction, id_compte_interne', 'numerical', 'integerOnly'=>true),
			array('treuillee', 'length', 'max'=>2),
			array('prix_vol, prix_treuil, prix_remorque, prix_moteur, prix_retro_moteur, prix_retro_remorque, prix_retro_treuil, prix_retro_vol, participation_journee', 'length', 'max'=>10),
			array('duree_fact, moteur, remorque', 'safe'),
			array('id_annu, fonction, duree_fact, treuillee, prix_vol, prix_treuil, prix_remorque, prix_moteur, id_compte_interne, moteur, remorque, prix_retro_moteur, prix_retro_remorque, prix_retro_treuil, prix_retro_vol, participation_journee', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_pilote_vol, id_vol, id_annu, date_vol, fonction, duree_fact, treuillee, prix_vol, prix_treuil, prix_remorque, prix_moteur, id_compte_interne, moteur, remorque, prix_retro_moteur, prix_retro_remorque, prix_retro_treuil, prix_retro_vol, participation_journee', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'pieces' => array(self::HAS_MANY, 'Piece', 'id_pilote_vol'),
			'idAnnu' => array(self::BELONGS_TO, 'Annuaire', 'id_annu'),
			'idVol' => array(self::BELONGS_TO, 'Vol', 'id_vol'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_pilote_vol' => Yii::t('app', 'Id Pilote Vol'),
			'id_vol' => null,
			'id_annu' => null,
			'date_vol' => Yii::t('app', 'Date Vol'),
			'fonction' => Yii::t('app', 'Fonction'),
			'duree_fact' => Yii::t('app', 'Duree Fact'),
			'treuillee' => Yii::t('app', 'Treuillee'),
			'prix_vol' => Yii::t('app', 'Prix Vol'),
			'prix_treuil' => Yii::t('app', 'Prix Treuil'),
			'prix_remorque' => Yii::t('app', 'Prix Remorque'),
			'prix_moteur' => Yii::t('app', 'Prix Moteur'),
			'id_compte_interne' => Yii::t('app', 'Id Compte Interne'),
			'moteur' => Yii::t('app', 'Moteur'),
			'remorque' => Yii::t('app', 'Remorque'),
			'prix_retro_moteur' => Yii::t('app', 'Prix Retro Moteur'),
			'prix_retro_remorque' => Yii::t('app', 'Prix Retro Remorque'),
			'prix_retro_treuil' => Yii::t('app', 'Prix Retro Treuil'),
			'prix_retro_vol' => Yii::t('app', 'Prix Retro Vol'),
			'participation_journee' => Yii::t('app', 'Participation Journee'),
			'pieces' => null,
			'idAnnu' => null,
			'idVol' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_pilote_vol', $this->id_pilote_vol);
		$criteria->compare('id_vol', $this->id_vol);
		$criteria->compare('id_annu', $this->id_annu);
		$criteria->compare('date_vol', $this->date_vol, true);
		$criteria->compare('fonction', $this->fonction);
		$criteria->compare('duree_fact', $this->duree_fact, true);
		$criteria->compare('treuillee', $this->treuillee, true);
		$criteria->compare('prix_vol', $this->prix_vol, true);
		$criteria->compare('prix_treuil', $this->prix_treuil, true);
		$criteria->compare('prix_remorque', $this->prix_remorque, true);
		$criteria->compare('prix_moteur', $this->prix_moteur, true);
		$criteria->compare('id_compte_interne', $this->id_compte_interne);
		$criteria->compare('moteur', $this->moteur, true);
		$criteria->compare('remorque', $this->remorque, true);
		$criteria->compare('prix_retro_moteur', $this->prix_retro_moteur, true);
		$criteria->compare('prix_retro_remorque', $this->prix_retro_remorque, true);
		$criteria->compare('prix_retro_treuil', $this->prix_retro_treuil, true);
		$criteria->compare('prix_retro_vol', $this->prix_retro_vol, true);
		$criteria->compare('participation_journee', $this->participation_journee, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
