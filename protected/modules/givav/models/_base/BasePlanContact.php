<?php

/**
 * This is the model base class for the table "plan_contact".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PlanContact".
 *
 * Columns in table "plan_contact" available as properties of the model,
 * followed by relations of table "plan_contact" available as properties of the model.
 *
 * @property integer $id_plan_contact
 * @property string $civilite
 * @property string $nom_prenom
 * @property string $adresse_1
 * @property string $adresse_2
 * @property string $code_postal
 * @property string $ville
 * @property string $pays
 * @property string $tel_perso
 * @property string $tel_mobile
 * @property string $e_mail_perso
 * @property string $date_creation
 *
 * @property PlanPart[] $planParts
 */
abstract class BasePlanContact extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'plan_contact';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PlanContact|PlanContacts', $n);
	}

	public static function representingColumn() {
		return 'nom_prenom';
	}

	public function rules() {
		return array(
			array('nom_prenom, date_creation', 'required'),
			array('civilite', 'length', 'max'=>5),
			array('nom_prenom, adresse_1, adresse_2, ville, pays, e_mail_perso', 'length', 'max'=>60),
			array('code_postal', 'length', 'max'=>15),
			array('tel_perso, tel_mobile', 'length', 'max'=>25),
			array('civilite, adresse_1, adresse_2, code_postal, ville, pays, tel_perso, tel_mobile, e_mail_perso', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_plan_contact, civilite, nom_prenom, adresse_1, adresse_2, code_postal, ville, pays, tel_perso, tel_mobile, e_mail_perso, date_creation', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'planParts' => array(self::HAS_MANY, 'PlanPart', 'id_plan_contact'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_plan_contact' => Yii::t('app', 'Id Plan Contact'),
			'civilite' => Yii::t('app', 'Civilite'),
			'nom_prenom' => Yii::t('app', 'Nom Prenom'),
			'adresse_1' => Yii::t('app', 'Adresse 1'),
			'adresse_2' => Yii::t('app', 'Adresse 2'),
			'code_postal' => Yii::t('app', 'Code Postal'),
			'ville' => Yii::t('app', 'Ville'),
			'pays' => Yii::t('app', 'Pays'),
			'tel_perso' => Yii::t('app', 'Tel Perso'),
			'tel_mobile' => Yii::t('app', 'Tel Mobile'),
			'e_mail_perso' => Yii::t('app', 'E Mail Perso'),
			'date_creation' => Yii::t('app', 'Date Creation'),
			'planParts' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_plan_contact', $this->id_plan_contact);
		$criteria->compare('civilite', $this->civilite, true);
		$criteria->compare('nom_prenom', $this->nom_prenom, true);
		$criteria->compare('adresse_1', $this->adresse_1, true);
		$criteria->compare('adresse_2', $this->adresse_2, true);
		$criteria->compare('code_postal', $this->code_postal, true);
		$criteria->compare('ville', $this->ville, true);
		$criteria->compare('pays', $this->pays, true);
		$criteria->compare('tel_perso', $this->tel_perso, true);
		$criteria->compare('tel_mobile', $this->tel_mobile, true);
		$criteria->compare('e_mail_perso', $this->e_mail_perso, true);
		$criteria->compare('date_creation', $this->date_creation, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
