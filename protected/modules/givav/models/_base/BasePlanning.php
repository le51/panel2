<?php

/**
 * This is the model base class for the table "planning".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Planning".
 *
 * Columns in table "planning" available as properties of the model,
 * followed by relations of table "planning" available as properties of the model.
 *
 * @property integer $id_planning
 * @property string $nom
 * @property boolean $actif
 * @property boolean $lecture_seule
 *
 * @property PlanLog[] $planLogs
 * @property PlanGroup[] $planGroups
 */
abstract class BasePlanning extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'planning';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Planning|Plannings', $n);
	}

	public static function representingColumn() {
		return 'nom';
	}

	public function rules() {
		return array(
			array('nom', 'required'),
			array('nom', 'length', 'max'=>60),
			array('actif, lecture_seule', 'safe'),
			array('actif, lecture_seule', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_planning, nom, actif, lecture_seule', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'planLogs' => array(self::HAS_MANY, 'PlanLog', 'id_planning'),
			'planGroups' => array(self::HAS_MANY, 'PlanGroup', 'id_planning'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_planning' => Yii::t('app', 'Id Planning'),
			'nom' => Yii::t('app', 'Nom'),
			'actif' => Yii::t('app', 'Actif'),
			'lecture_seule' => Yii::t('app', 'Lecture Seule'),
			'planLogs' => null,
			'planGroups' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_planning', $this->id_planning);
		$criteria->compare('nom', $this->nom, true);
		$criteria->compare('actif', $this->actif);
		$criteria->compare('lecture_seule', $this->lecture_seule);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
