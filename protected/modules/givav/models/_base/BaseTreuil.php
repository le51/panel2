<?php

/**
 * This is the model base class for the table "treuil".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Treuil".
 *
 * Columns in table "treuil" available as properties of the model,
 * followed by relations of table "treuil" available as properties of the model.
 *
 * @property integer $id_treuil
 * @property string $nom
 * @property boolean $exterieur
 * @property boolean $actif
 *
 * @property TreuilRetrocession $treuilRetrocession
 * @property Vol[] $vols
 */
abstract class BaseTreuil extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'treuil';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Treuil|Treuils', $n);
	}

	public static function representingColumn() {
		return 'nom';
	}

	public function rules() {
		return array(
			array('nom', 'required'),
			array('nom', 'length', 'max'=>60),
			array('exterieur, actif', 'safe'),
			array('exterieur, actif', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_treuil, nom, exterieur, actif', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'treuilRetrocession' => array(self::HAS_ONE, 'TreuilRetrocession', 'id_treuil'),
			'vols' => array(self::HAS_MANY, 'Vol', 'treuil'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_treuil' => Yii::t('app', 'Id Treuil'),
			'nom' => Yii::t('app', 'Nom'),
			'exterieur' => Yii::t('app', 'Exterieur'),
			'actif' => Yii::t('app', 'Actif'),
			'treuilRetrocession' => null,
			'vols' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_treuil', $this->id_treuil);
		$criteria->compare('nom', $this->nom, true);
		$criteria->compare('exterieur', $this->exterieur);
		$criteria->compare('actif', $this->actif);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
