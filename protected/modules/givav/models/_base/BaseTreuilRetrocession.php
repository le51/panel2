<?php

/**
 * This is the model base class for the table "treuil_retrocession".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TreuilRetrocession".
 *
 * Columns in table "treuil_retrocession" available as properties of the model,
 * followed by relations of table "treuil_retrocession" available as properties of the model.
 *
 * @property integer $id_treuil
 * @property integer $id_annu
 * @property string $prix
 *
 * @property Annuaire $idAnnu
 * @property Treuil $idTreuil
 */
abstract class BaseTreuilRetrocession extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'treuil_retrocession';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'TreuilRetrocession|TreuilRetrocessions', $n);
	}

	public static function representingColumn() {
		return 'prix';
	}

	public function rules() {
		return array(
			array('id_treuil, id_annu', 'required'),
			array('id_treuil, id_annu', 'numerical', 'integerOnly'=>true),
			array('prix', 'length', 'max'=>10),
			array('prix', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_treuil, id_annu, prix', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idAnnu' => array(self::BELONGS_TO, 'Annuaire', 'id_annu'),
			'idTreuil' => array(self::BELONGS_TO, 'Treuil', 'id_treuil'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_treuil' => null,
			'id_annu' => null,
			'prix' => Yii::t('app', 'Prix'),
			'idAnnu' => null,
			'idTreuil' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_treuil', $this->id_treuil);
		$criteria->compare('id_annu', $this->id_annu);
		$criteria->compare('prix', $this->prix, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
