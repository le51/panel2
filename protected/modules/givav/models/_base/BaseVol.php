<?php

/**
 * This is the model base class for the table "vol".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Vol".
 *
 * Columns in table "vol" available as properties of the model,
 * followed by relations of table "vol" available as properties of the model.
 *
 * @property integer $id_vol
 * @property integer $id_aeronef
 * @property string $date_vol
 * @property integer $planche
 * @property integer $no_ligne
 * @property string $passager
 * @property boolean $vi_double
 * @property string $decollage
 * @property string $atterrissage
 * @property integer $nb_atterrissages
 * @property integer $treuil
 * @property integer $remorqueur
 * @property string $prix_vol
 * @property string $prix_remorque
 * @property string $prix_treuil
 * @property string $prix_moteur
 * @property boolean $hors_forfait
 * @property string $lieu_decollage
 * @property string $lieu_atterrissage
 * @property string $commentaire
 * @property string $date_creation
 * @property integer $id_utilisateur_creation
 * @property string $date_modification
 * @property integer $id_utilisateur_modification
 * @property integer $id_remorque
 * @property integer $id_tarif_type_vol
 * @property integer $saison
 * @property string $tps_moteur
 * @property string $tps_remorque
 *
 * @property NetCoupe $netCoupe
 * @property PiloteVol[] $piloteVols
 * @property Utilisateur $idUtilisateurCreation
 * @property Utilisateur $idUtilisateurModification
 * @property Aeronef $remorqueur0
 * @property Treuil $treuil0
 * @property Aeronef $idAeronef
 * @property Remorque $idRemorque
 * @property TarifTypeVol $idTarifTypeVol
 */
abstract class BaseVol extends GxActiveRecord {

	public function getDbConnection()
	{
		return Yii::app()->givav;
	}
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'vol';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Vol|Vols', $n);
	}

	public static function representingColumn() {
		return 'date_vol';
	}

	public function rules() {
		return array(
			array('id_vol, id_aeronef, date_vol, planche, no_ligne, decollage, atterrissage, date_creation, id_utilisateur_creation, date_modification, id_utilisateur_modification, id_tarif_type_vol', 'required'),
			array('id_vol, id_aeronef, planche, no_ligne, nb_atterrissages, treuil, remorqueur, id_utilisateur_creation, id_utilisateur_modification, id_remorque, id_tarif_type_vol, saison', 'numerical', 'integerOnly'=>true),
			array('passager, lieu_decollage, lieu_atterrissage', 'length', 'max'=>60),
			array('prix_vol, prix_remorque, prix_treuil, prix_moteur', 'length', 'max'=>10),
			array('commentaire', 'length', 'max'=>120),
			array('vi_double, hors_forfait, tps_moteur, tps_remorque', 'safe'),
			array('passager, vi_double, nb_atterrissages, treuil, remorqueur, prix_vol, prix_remorque, prix_treuil, prix_moteur, hors_forfait, lieu_decollage, lieu_atterrissage, commentaire, id_remorque, saison, tps_moteur, tps_remorque', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_vol, id_aeronef, date_vol, planche, no_ligne, passager, vi_double, decollage, atterrissage, nb_atterrissages, treuil, remorqueur, prix_vol, prix_remorque, prix_treuil, prix_moteur, hors_forfait, lieu_decollage, lieu_atterrissage, commentaire, date_creation, id_utilisateur_creation, date_modification, id_utilisateur_modification, id_remorque, id_tarif_type_vol, saison, tps_moteur, tps_remorque', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'netCoupe' => array(self::HAS_ONE, 'NetCoupe', 'id_vol'),
			'piloteVols' => array(self::HAS_MANY, 'PiloteVol', 'id_vol'),
			'idUtilisateurCreation' => array(self::BELONGS_TO, 'Utilisateur', 'id_utilisateur_creation'),
			'idUtilisateurModification' => array(self::BELONGS_TO, 'Utilisateur', 'id_utilisateur_modification'),
			'remorqueur0' => array(self::BELONGS_TO, 'Aeronef', 'remorqueur'),
			'treuil0' => array(self::BELONGS_TO, 'Treuil', 'treuil'),
			'idAeronef' => array(self::BELONGS_TO, 'Aeronef', 'id_aeronef'),
			'idRemorque' => array(self::BELONGS_TO, 'Remorque', 'id_remorque'),
			'idTarifTypeVol' => array(self::BELONGS_TO, 'TarifTypeVol', 'id_tarif_type_vol'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_vol' => Yii::t('app', 'Id Vol'),
			'id_aeronef' => null,
			'date_vol' => Yii::t('app', 'Date Vol'),
			'planche' => Yii::t('app', 'Planche'),
			'no_ligne' => Yii::t('app', 'No Ligne'),
			'passager' => Yii::t('app', 'Passager'),
			'vi_double' => Yii::t('app', 'Vi Double'),
			'decollage' => Yii::t('app', 'Decollage'),
			'atterrissage' => Yii::t('app', 'Atterrissage'),
			'nb_atterrissages' => Yii::t('app', 'Nb Atterrissages'),
			'treuil' => null,
			'remorqueur' => null,
			'prix_vol' => Yii::t('app', 'Prix Vol'),
			'prix_remorque' => Yii::t('app', 'Prix Remorque'),
			'prix_treuil' => Yii::t('app', 'Prix Treuil'),
			'prix_moteur' => Yii::t('app', 'Prix Moteur'),
			'hors_forfait' => Yii::t('app', 'Hors Forfait'),
			'lieu_decollage' => Yii::t('app', 'Lieu Decollage'),
			'lieu_atterrissage' => Yii::t('app', 'Lieu Atterrissage'),
			'commentaire' => Yii::t('app', 'Commentaire'),
			'date_creation' => Yii::t('app', 'Date Creation'),
			'id_utilisateur_creation' => null,
			'date_modification' => Yii::t('app', 'Date Modification'),
			'id_utilisateur_modification' => null,
			'id_remorque' => null,
			'id_tarif_type_vol' => null,
			'saison' => Yii::t('app', 'Saison'),
			'tps_moteur' => Yii::t('app', 'Tps Moteur'),
			'tps_remorque' => Yii::t('app', 'Tps Remorque'),
			'netCoupe' => null,
			'piloteVols' => null,
			'idUtilisateurCreation' => null,
			'idUtilisateurModification' => null,
			'remorqueur0' => null,
			'treuil0' => null,
			'idAeronef' => null,
			'idRemorque' => null,
			'idTarifTypeVol' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_vol', $this->id_vol);
		$criteria->compare('id_aeronef', $this->id_aeronef);
		$criteria->compare('date_vol', $this->date_vol, true);
		$criteria->compare('planche', $this->planche);
		$criteria->compare('no_ligne', $this->no_ligne);
		$criteria->compare('passager', $this->passager, true);
		$criteria->compare('vi_double', $this->vi_double);
		$criteria->compare('decollage', $this->decollage, true);
		$criteria->compare('atterrissage', $this->atterrissage, true);
		$criteria->compare('nb_atterrissages', $this->nb_atterrissages);
		$criteria->compare('treuil', $this->treuil);
		$criteria->compare('remorqueur', $this->remorqueur);
		$criteria->compare('prix_vol', $this->prix_vol, true);
		$criteria->compare('prix_remorque', $this->prix_remorque, true);
		$criteria->compare('prix_treuil', $this->prix_treuil, true);
		$criteria->compare('prix_moteur', $this->prix_moteur, true);
		$criteria->compare('hors_forfait', $this->hors_forfait);
		$criteria->compare('lieu_decollage', $this->lieu_decollage, true);
		$criteria->compare('lieu_atterrissage', $this->lieu_atterrissage, true);
		$criteria->compare('commentaire', $this->commentaire, true);
		$criteria->compare('date_creation', $this->date_creation, true);
		$criteria->compare('id_utilisateur_creation', $this->id_utilisateur_creation);
		$criteria->compare('date_modification', $this->date_modification, true);
		$criteria->compare('id_utilisateur_modification', $this->id_utilisateur_modification);
		$criteria->compare('id_remorque', $this->id_remorque);
		$criteria->compare('id_tarif_type_vol', $this->id_tarif_type_vol);
		$criteria->compare('saison', $this->saison);
		$criteria->compare('tps_moteur', $this->tps_moteur, true);
		$criteria->compare('tps_remorque', $this->tps_remorque, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
